
syntax = "proto3";

package protoRewardTx;

option go_package = "rewardTx";
option (gogoproto.stable_marshaler_all) = true;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

enum Type {
	// unknown type
	UnknownTx = 0;
	// LeaderTx identifies a leader reward tx type
	LeaderTx = 1;
	// BurnTx identifies a burn reward tx type
	BurnTx = 2;
	// ProtocolSustainabilityTx identifies a protocol sustainability reward tx type
	ProtocolSustainabilityTx = 3;
	// ProtocolRewardsTx identifies a protocol reward tx type
	ProtocolRewardsTx = 4;
	// ProtocolRewardsForMetaTx identifies a protocol reward for meta tx type
	ProtocolRewardsForMetaTx = 5;
}


// RewardTx holds the data for a reward transaction
message RewardTx {
	uint64   Round     = 1 [(gogoproto.jsontag) = "round"];
	bytes    Value     = 3 [(gogoproto.jsontag) = "value", (gogoproto.casttypewith) = "math/big.Int;github.com/multiversx/mx-chain-core-go/data.BigIntCaster"];
	bytes    RcvAddr   = 4 [(gogoproto.jsontag) = "receiver"];
	uint32   Epoch     = 2 [(gogoproto.jsontag) = "epoch"];
}
