// This file holds the data structures related with the functionality of a shard block V2
syntax = "proto3";

package proto;

option go_package = "block";
option (gogoproto.stable_marshaler_all) = true;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "block.proto";

// HeaderV2 extends the Header structure with extra fields for version 2
message HeaderV2 {
  Header  Header = 1 [(gogoproto.jsontag) = "header,omitempty"];
  bytes   ScheduledRootHash = 2 [(gogoproto.jsontag) = "scheduledRootHash,omitempty"];
  bytes   ScheduledAccumulatedFees = 3 [(gogoproto.jsontag) = "scheduledAccumulatedFees,omitempty", (gogoproto.casttypewith) = "math/big.Int;github.com/multiversx/mx-chain-core-go/data.BigIntCaster"];
  bytes   ScheduledDeveloperFees = 4 [(gogoproto.jsontag) = "scheduledDeveloperFees,omitempty", (gogoproto.casttypewith) = "math/big.Int;github.com/multiversx/mx-chain-core-go/data.BigIntCaster"];
  uint64  ScheduledGasProvided = 5 [(gogoproto.jsontag) = "scheduledGasProvided"];
  uint64  ScheduledGasPenalized = 6 [(gogoproto.jsontag) = "scheduledGasPenalized"];
  uint64  ScheduledGasRefunded = 7 [(gogoproto.jsontag) = "scheduledGasRefunded"];
}

message MiniBlockReserved {
  ProcessingType ExecutionType = 1 [(gogoproto.jsontag) = "executionType"];
  bytes TransactionsType = 2 [(gogoproto.jsontag) = "transactionsType"];
}

message MiniBlockHeaderReserved {
  ProcessingType ExecutionType = 1 [(gogoproto.jsontag) = "executionType"];
  MiniBlockState State = 2 [(gogoproto.jsontag) = "state"];
  int32 IndexOfFirstTxProcessed = 3 [(gogoproto.jsontag) = "indexOfFirstTxProcessed"];
  int32 IndexOfLastTxProcessed = 4 [(gogoproto.jsontag) = "indexOfLastTxProcessed"];
}
