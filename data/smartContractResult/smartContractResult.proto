
syntax = "proto3";

package proto;

option go_package = "github.com/multiversx/mx-chain-core-go/data/smartContractResult;smartContractResult";
option (gogoproto.stable_marshaler_all) = true;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

message SmartContractResult  {
	uint64   Nonce          = 1  [(gogoproto.jsontag) = "nonce"];
	bytes    Value          = 2  [(gogoproto.jsontag) = "value", (gogoproto.casttypewith) = "math/big.Int;github.com/multiversx/mx-chain-core-go/data.BigIntCaster"];
	bytes    RcvAddr        = 3  [(gogoproto.jsontag) = "receiver"];
	bytes    SndAddr        = 4  [(gogoproto.jsontag) = "sender"];
	bytes    RelayerAddr    = 5  [(gogoproto.jsontag) = "relayer"];
	bytes    RelayedValue   = 6  [(gogoproto.jsontag) = "relayedValue", (gogoproto.casttypewith) = "math/big.Int;github.com/multiversx/mx-chain-core-go/data.BigIntCaster"];
	bytes    Code           = 7  [(gogoproto.jsontag) = "code,omitempty"];
	bytes    Data           = 8  [(gogoproto.jsontag) = "data,omitempty"];
	bytes    PrevTxHash     = 9  [(gogoproto.jsontag) = "prevTxHash"];
	bytes    OriginalTxHash = 10 [(gogoproto.jsontag) = "originalTxHash"];
	uint64   GasLimit       = 11 [(gogoproto.jsontag) = "gasLimit"];
	uint64   GasPrice       = 12 [(gogoproto.jsontag) = "gasPrice"];
	int64    CallType       = 13 [(gogoproto.jsontag) = "callType", (gogoproto.casttype) = "github.com/multiversx/mx-chain-core-go/data/vm.CallType"];
	bytes    CodeMetadata   = 14 [(gogoproto.jsontag) = "codeMetadata,omitempty"];
	bytes    ReturnMessage  = 15 [(gogoproto.jsontag) = "returnMessage,omitempty"];
	bytes    OriginalSender = 16 [(gogoproto.jsontag) = "originalSender,omitempty"];
}
